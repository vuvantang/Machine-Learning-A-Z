clear
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Importing the dataset
dataset = read.csv('Data.csv')
# Encoding categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# Feature Scaling
# training_set = scale(training_set)
# Feature Scaling
# training_set = scale(training_set)
# Feature Scaling
# training_set = scale(training_set)
# Feature Scaling
# training_set = scale(training_set)
# Feature Scaling
# training_set = scale(training_set)
# Importing the dataset
dataset = read.csv('Data.csv')
# Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# Data Preprocessing
# Importing the dataset
dataset = read.csv('Data.csv')
# Data Preprocessing
# Importing the dataset
dataset = read.csv('Data.csv')
# Data Preprocessing
# Importing the dataset
dataset = read.csv('Data.csv')
# Data Preprocessing
# Importing the dataset
dataset = read.csv('Data.csv')
# Data Preprocessing
# Importing the dataset
dataset = read.csv('Data.csv')
setwd("~/Desktop/Machine Learning A-Z (Codes and Datasets)/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/R")
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
# training_set = scale(training_set)
# test_set = scale(test_set)
library(DBI)
library(odbc)
library(openssl)
library(parallel)
library(yaml)
install.packages(c("foreign", "KernSmooth", "lattice", "Matrix", "mgcv", "nlme", "rpart", "spatial", "survival"))
library(askpass)
detach("package:askpass", unload = TRUE)
library(askpass)
detach("package:askpass", unload = TRUE)
